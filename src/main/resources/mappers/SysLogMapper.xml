<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ordersystem.dao.SysLogDao">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.ordersystem.entity.SysLog">
        <id column="log_id" property="logId" />
        <result column="username" property="username" />
        <result column="user_id" property="userId" />
        <result column="operation" property="operation" />
        <result column="method" property="method" />
        <result column="params" property="params" />
        <result column="ip" property="ip" />
        <result column="status_code" property="statusCode" />
        <result column="error_msg" property="errorMsg" />
        <result column="create_time" property="createTime" />
    </resultMap>
    
    <!-- 公共列 -->
    <sql id="Base_Column_List">
        log_id, username, user_id, operation, method, params, ip, status_code, error_msg, create_time
    </sql>
    
    <!-- 保存日志 -->
    <insert id="save" parameterType="com.ordersystem.entity.SysLog" useGeneratedKeys="true" keyProperty="logId">
        INSERT INTO sys_log (
            username, user_id, operation, method, params, ip, status_code, error_msg, create_time
        ) VALUES (
            #{username}, #{userId}, #{operation}, #{method}, #{params}, #{ip}, #{statusCode}, #{errorMsg}, #{createTime}
        )
    </insert>
    
    <!-- 查询所有日志 -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_log
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据用户ID查询日志 -->
    <select id="findByUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_log
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据用户名查询日志 -->
    <select id="findByUsername" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_log
        WHERE username = #{username}
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据操作类型查询日志 -->
    <select id="findByOperation" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_log
        WHERE operation = #{operation}
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据多条件筛选查询日志 -->
    <select id="findByFilter" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM sys_log
        <where>
            <if test="filter.username != null and filter.username != ''">
                AND username LIKE CONCAT('%', #{filter.username}, '%')
            </if>
            <if test="filter.operation != null and filter.operation != ''">
                AND operation = #{filter.operation}
            </if>
            <if test="filter.statusCode != null">
                AND status_code = #{filter.statusCode}
            </if>
            <if test="filter.ip != null and filter.ip != ''">
                AND ip LIKE CONCAT('%', #{filter.ip}, '%')
            </if>
            <if test="startTime != null and startTime != ''">
                AND create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND create_time &lt;= #{endTime}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>
    
    <!-- 删除日志 -->
    <delete id="deleteById">
        DELETE FROM sys_log WHERE log_id = #{logId}
    </delete>
    
    <!-- 批量保存日志 -->
    <insert id="batchSave" parameterType="java.util.List">
        INSERT INTO sys_log (
            username, user_id, operation, method, params, ip, status_code, error_msg, create_time
        ) VALUES 
        <foreach collection="list" item="log" separator=",">
            (
                #{log.username}, #{log.userId}, #{log.operation}, #{log.method}, #{log.params}, 
                #{log.ip}, #{log.statusCode}, #{log.errorMsg}, #{log.createTime}
            )
        </foreach>
    </insert>
</mapper>